{"version":3,"sources":["01-nativeFuncs.js","98-autoReload.js"],"names":["os","require","nwGui","setAlwaysOnTop","isOnTop","Window","get","fileIO","fs","mkdirp","readFile","path","callback","this","err","data","Events","Error","error","msg","readAllFiles","dirname","onFileContent","onError","_this","readdir","filenames","length","forEach","filename","id","content","writeFile","makeDirs","existsSync","deleteFileSync","unlinkSync","notifier","console","notify","title","message","icon","sound","Info","log","netIO","net","request","http","https","express","pem","bodyParser","openURL","ethUtil","crypto","Wallet","Tx","window","gulp","task","location","reload","watch"],"mappings":"AAAA,KAAAA,IAAAC,QAAA,KACA,IAAAC,OAAAD,QAAA,SACAC,OAAAC,eAAA,SAAAC,GACAF,MAAAG,OAAAC,MAAAH,eAAAC,GAEA,IAAAG,UACAA,QAAAC,GAAAP,QAAA,MACAM,OAAAE,OAAAR,QAAA,UACAM,OAAAG,SAAA,SAAAC,EAAAC,GACAC,KAAAL,GAAAE,SAAAC,EAAA,OAAA,SAAAG,EAAAC,GACAD,GACAE,OAAAC,MAAAH,GACAF,GAAAM,OAAA,EAAAC,IAAAL,EAAAC,KAAA,MAEAH,GAAAM,OAAA,EAAAC,IAAA,GAAAJ,KAAAA,OAGAR,OAAAa,aAAA,SAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAX,IACAW,GAAAhB,GAAAiB,QAAAJ,EAAA,SAAAP,EAAAY,GACA,MAAAZ,OACAS,GAAAT,IAGAY,EAAAC,QAAAL,EAAA,GAAA,IAAA,OACAI,GAAAE,QAAA,SAAAC,EAAAC,GACAN,EAAAhB,GAAAE,SAAAW,EAAAQ,EAAA,QAAA,SAAAf,EAAAiB,GACA,MAAAjB,OACAS,GAAAT,OAGAQ,GAAAD,EAAAQ,EAAAE,EAAAD,GAAAJ,EAAAC,OAAA,WAKApB,OAAAyB,UAAA,SAAArB,EAAAI,EAAAH,GACAC,KAAAL,GAAAwB,UAAArB,EAAAI,EAAA,OAAA,SAAAD,GAEAF,EADAE,GACAI,OAAA,EAAAC,IAAAL,EAAAC,KAAA,KAEAG,OAAA,EAAAC,IAAA,GAAAJ,MAAA,OAGAR,OAAA0B,SAAA,SAAAtB,EAAAC,GACAC,KAAAJ,OAAAE,EAAA,SAAAG,GAEAF,EADAE,GACAI,OAAA,EAAAC,IAAAL,EAAAC,MAAA,IAEAG,OAAA,EAAAC,IAAA,GAAAJ,MAAA,OAGAR,OAAA2B,WAAA,SAAAvB,GACA,MAAAE,MAAAL,GAAA0B,WAAAvB,IAEAJ,OAAA4B,eAAA,SAAAxB,GACAE,KAAAqB,WAAAvB,IAAAE,KAAAL,GAAA4B,WAAAzB,GAGA,IAAAK,UACAA,QAAAqB,SAAApC,QAAA,iBACAe,OAAAC,MAAA,SAAAE,GACAmB,QAAApB,MAAAC,GACAH,OAAAqB,SAAAE,QACAC,MAAA,iBACAC,QAAAtB,EACAuB,KAAA,qBACAC,OAAA,KAGA3B,OAAA4B,KAAA,SAAAzB,GACAmB,QAAAO,IAAA1B,GACAH,OAAAqB,SAAAE,QACAC,MAAA,gBACAC,QAAAtB,EACAuB,KAAA,qBACAC,OAAA,IAGA,IAAAG,SACAA,OAAAC,IAAA9C,QAAA,OACA6C,MAAAE,QAAA/C,QAAA,WACA6C,MAAAG,KAAAhD,QAAA,QACA6C,MAAAI,MAAAjD,QAAA,SACA6C,MAAAK,QAAAlD,QAAA,WACA6C,MAAAM,IAAAnD,QAAA,OACA6C,MAAAO,WAAApD,QAAA,eACA6C,MAAAQ,QAAArD,QAAA,OAEA,IAAAsD,SAAAtD,QAAA,kBACAsD,SAAAC,OAAAvD,QAAA,UACAsD,QAAAE,OAAAxD,QAAA,qBACAsD,QAAAG,GAAAzD,QAAA,iBACA0D,OAAAJ,QAAAA,OC7FA,IAAAK,MAAA3D,QAAA,OACA2D,MAAAC,KAAA,SAAA,WACAC,UAAAA,SAAAC,QAAAD,SAAAC,WAEAH,KAAAI,MAAA,iCAAA,WACAJ,KAAAI,MAAA,iCAAA,WACAJ,KAAAI,MAAA,mCAAA,WACAJ,KAAAI,MAAA,oBAAA","file":"../mewify-native.min.js","sourcesContent":["const os = require('os');\nvar nwGui = require('nw.gui');\nnwGui.setAlwaysOnTop = function(isOnTop) {\n    nwGui.Window.get().setAlwaysOnTop(isOnTop);;\n}\nvar fileIO = {};\nfileIO.fs = require('fs');\nfileIO.mkdirp = require('mkdirp');\nfileIO.readFile = function(path, callback) {\n    this.fs.readFile(path, 'utf8', function(err, data) {\n        if (err) {\n            Events.Error(err);\n            callback({ error: true, msg: err, data: '' });\n        } else\n            callback({ error: false, msg: '', data: data });\n    });\n}\nfileIO.readAllFiles = function(dirname, onFileContent, onError) {\n    var _this = this;\n    _this.fs.readdir(dirname, function(err, filenames) {\n        if (err) {\n            onError(err);\n            return;\n        }\n        if (!filenames.length) onFileContent('', '', true);\n        filenames.forEach(function(filename, id) {\n            _this.fs.readFile(dirname + filename, 'utf-8', function(err, content) {\n                if (err) {\n                    onError(err);\n                    return;\n                }\n                onFileContent(dirname + filename, content, id == filenames.length - 1);\n            });\n        });\n    });\n}\nfileIO.writeFile = function(path, data, callback) {\n    this.fs.writeFile(path, data, 'utf8', function(err) {\n        if (err)\n            callback({ error: true, msg: err, data: '' });\n        else\n            callback({ error: false, msg: '', data: true });\n    });\n}\nfileIO.makeDirs = function(path, callback) {\n    this.mkdirp(path, function(err) {\n        if (err)\n            callback({ error: true, msg: err, data: false });\n        else\n            callback({ error: false, msg: '', data: true });\n    });\n}\nfileIO.existsSync = function(path) {\n    return this.fs.existsSync(path);\n}\nfileIO.deleteFileSync = function(path) {\n    if (this.existsSync(path)) this.fs.unlinkSync(path);\n}\n\nvar Events = {};\nEvents.notifier = require('node-notifier');\nEvents.Error = function(msg) {\n    console.error(msg);\n    Events.notifier.notify({\n        'title': 'Mewify - Error',\n        'message': msg,\n        'icon': '../images/icon.png',\n        'sound': true\n    });\n}\nEvents.Info = function(msg) {\n    console.log(msg);\n    Events.notifier.notify({\n        'title': 'Mewify - Info',\n        'message': msg,\n        'icon': '../images/icon.png',\n        'sound': true\n    });\n}\nvar netIO = {};\nnetIO.net = require('net');\nnetIO.request = require('request');\nnetIO.http = require('http');\nnetIO.https = require('https');\nnetIO.express = require('express');\nnetIO.pem = require('pem');\nnetIO.bodyParser = require('body-parser');\nnetIO.openURL = require(\"open\");\n\nvar ethUtil = require('ethereumjs-util');\nethUtil.crypto = require('crypto');\nethUtil.Wallet = require('ethereumjs-wallet');\nethUtil.Tx = require('ethereumjs-tx');\nwindow.ethUtil = ethUtil;\n","var gulp = require('gulp');\ngulp.task('reload', function() {\n    if (location && location.reload) location.reload();\n});\ngulp.watch('./app/js/mewify-master.min.js', ['reload']);\ngulp.watch('./app/js/mewify-native.min.js', ['reload']);\ngulp.watch('./app/css/mewify-master.min.css', ['reload']);\ngulp.watch('./app/index.htmk', ['reload']);\n"]}