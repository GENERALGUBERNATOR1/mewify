{"version":3,"sources":["/app/js/mewify-native.min.js","/app/js/mewify-native.min.js"],"names":["fileIO","fs","require","readFile","path","callback","this","err","data","error","msg","writeFile","existsSync","deleteFileSync","unlinkSync","Events","Error","console","Info","log","netIO","net","request","gulp","task","location","reload","watch"],"mappings":"AAAA,GAAAA,UACAA,QAAAC,GAAAC,QAAA,MACAF,OAAAG,SAAA,SAAAC,EAAAC,GACAC,KAAAL,GAAAE,SAAAC,EAAA,OAAA,SAAAG,EAAAC,GACAD,GACAF,GAAAI,OAAA,EAAAC,IAAAH,EAAAC,KAAA,KAEAH,GAAAI,OAAA,EAAAC,IAAA,GAAAF,KAAAA,OAGAR,OAAAW,UAAA,SAAAP,EAAAI,EAAAH,GACAC,KAAAL,GAAAU,UAAAP,EAAAI,EAAA,OAAA,SAAAD,GACAA,GACAF,GAAAI,OAAA,EAAAC,IAAAH,EAAAC,KAAA,KAEAH,GAAAI,OAAA,EAAAC,IAAA,GAAAF,MAAA,OAGAR,OAAAY,WAAA,SAAAR,GACA,MAAAE,MAAAL,GAAAW,WAAAR,IAEAJ,OAAAa,eAAA,SAAAT,GACAE,KAAAM,WAAAR,IAAAE,KAAAL,GAAAa,WAAAV,GAGA,IAAAW,UACAA,QAAAC,MAAA,SAAAN,GACAO,QAAAR,MAAAC,IAEAK,OAAAG,KAAA,SAAAR,GACAO,QAAAE,IAAAT,GAGA,IAAAU,SACAA,OAAAC,IAAAnB,QAAA,OACAkB,MAAAE,QAAApB,QAAA,UCnCA,IAAAqB,MAAArB,QAAA,OACAqB,MAAAC,KAAA,SAAA,WACAC,UAAAA,SAAAC,WAEAH,KAAAI,MAAA,iCAAA,WACAJ,KAAAI,MAAA,iCAAA","file":"../mewify-native.min.js","sourcesContent":["var fileIO = {};\nfileIO.fs = require('fs');\nfileIO.readFile = function(path, callback) {\n    this.fs.readFile(path, 'utf8', function(err, data) {\n        if (err) {\n            callback({ error: true, msg: err, data: '' });\n        }\n        callback({ error: false, msg: '', data: data });\n    });\n}\nfileIO.writeFile = function(path, data, callback) {\n    this.fs.writeFile(path, data, 'utf8', function(err) {\n        if (err) {\n            callback({ error: true, msg: err, data: '' });\n        }\n        callback({ error: false, msg: '', data: true });\n    });\n}\nfileIO.existsSync = function(path) {\n\treturn this.fs.existsSync(path);\n}\nfileIO.deleteFileSync = function(path) {\n\tif(this.existsSync(path)) this.fs.unlinkSync(path);\n}\n\nvar Events = {};\nEvents.Error = function(msg) {\n\tconsole.error(msg);\n}\nEvents.Info = function(msg) {\n\tconsole.log(msg);\n}\n\nvar netIO = {};\nnetIO.net = require('net');\nnetIO.request = require('request');","var gulp = require('gulp');\ngulp.task('reload', function() {\n    if (location) location.reload();\n});\ngulp.watch('./app/js/mewify-master.min.js', ['reload']);\ngulp.watch('./app/js/mewify-native.min.js', ['reload']);\n"]}