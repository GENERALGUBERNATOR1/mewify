{"version":3,"sources":["/app/js/mewify-native.min.js","/app/js/mewify-native.min.js"],"names":["os","require","fileIO","fs","mkdirp","readFile","path","callback","this","err","data","error","msg","writeFile","makeDirs","existsSync","deleteFileSync","unlinkSync","Events","Error","console","Info","log","netIO","net","request","gulp","task","location","reload","watch"],"mappings":"AAAA,KAAAA,IAAAC,QAAA,KACA,IAAAC,UACAA,QAAAC,GAAAF,QAAA,MACAC,OAAAE,OAAAH,QAAA,UACAC,OAAAG,SAAA,SAAAC,EAAAC,GACAC,KAAAL,GAAAE,SAAAC,EAAA,OAAA,SAAAG,EAAAC,GAEAH,EADAE,GACAE,OAAA,EAAAC,IAAAH,EAAAC,KAAA,KAEAC,OAAA,EAAAC,IAAA,GAAAF,KAAAA,OAGAR,OAAAW,UAAA,SAAAP,EAAAI,EAAAH,GACAC,KAAAL,GAAAU,UAAAP,EAAAI,EAAA,OAAA,SAAAD,GAEAF,EADAE,GACAE,OAAA,EAAAC,IAAAH,EAAAC,KAAA,KAEAC,OAAA,EAAAC,IAAA,GAAAF,MAAA,OAGAR,OAAAY,SAAA,SAAAR,EAAAC,GACAC,KAAAJ,OAAAE,EAAA,SAAAG,GAEAF,EADAE,GACAE,OAAA,EAAAC,IAAAH,EAAAC,MAAA,IAEAC,OAAA,EAAAC,IAAA,GAAAF,MAAA,OAGAR,OAAAa,WAAA,SAAAT,GACA,MAAAE,MAAAL,GAAAY,WAAAT,IAEAJ,OAAAc,eAAA,SAAAV,GACAE,KAAAO,WAAAT,IAAAE,KAAAL,GAAAc,WAAAX,GAGA,IAAAY,UACAA,QAAAC,MAAA,SAAAP,GACAQ,QAAAT,MAAAC,IAEAM,OAAAG,KAAA,SAAAT,GACAQ,QAAAE,IAAAV,GAEA,IAAAW,SACAA,OAAAC,IAAAvB,QAAA,OACAsB,MAAAE,QAAAxB,QAAA,UC5CA,IAAAyB,MAAAzB,QAAA,OACAyB,MAAAC,KAAA,SAAA,WACAC,UAAAA,SAAAC,QAAAD,SAAAC,WAEAH,KAAAI,MAAA,iCAAA,WACAJ,KAAAI,MAAA,iCAAA","file":"../mewify-native.min.js","sourcesContent":["const os = require('os');\nvar fileIO = {};\nfileIO.fs = require('fs');\nfileIO.mkdirp = require('mkdirp');\nfileIO.readFile = function(path, callback) {\n    this.fs.readFile(path, 'utf8', function(err, data) {\n        if (err)\n            callback({ error: true, msg: err, data: '' });\n        else\n            callback({ error: false, msg: '', data: data });\n    });\n}\nfileIO.writeFile = function(path, data, callback) {\n    this.fs.writeFile(path, data, 'utf8', function(err) {\n        if (err)\n            callback({ error: true, msg: err, data: '' });\n        else\n            callback({ error: false, msg: '', data: true });\n    });\n}\nfileIO.makeDirs = function(path, callback) {\n    this.mkdirp(path, function(err) {\n        if (err) \n            callback({ error: true, msg: err, data: false });\n        else \n            callback({ error: false, msg: '', data: true });\n    });\n}\nfileIO.existsSync = function(path) {\n    return this.fs.existsSync(path);\n}\nfileIO.deleteFileSync = function(path) {\n    if (this.existsSync(path)) this.fs.unlinkSync(path);\n}\n\nvar Events = {};\nEvents.Error = function(msg) {\n    console.error(msg);\n}\nEvents.Info = function(msg) {\n    console.log(msg);\n}\nvar netIO = {};\nnetIO.net = require('net');\nnetIO.request = require('request');\n","var gulp = require('gulp');\ngulp.task('reload', function() {\n    if (location && location.reload) location.reload();\n});\ngulp.watch('./app/js/mewify-master.min.js', ['reload']);\ngulp.watch('./app/js/mewify-native.min.js', ['reload']);\n"]}